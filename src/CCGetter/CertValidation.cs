using System;
using System.Linq;
using System.Net.Http;
using System.Net.Security;
using System.Security.Cryptography.X509Certificates;

namespace CCGetter
{
    // Manually pin the certificate, because the G DATA certificate is not present in any Linux distribution.
    // This leads to an "invalid certificate" error.
    public class CertValidation
    {
        public static bool IsExpectedCert(HttpRequestMessage rm, X509Certificate2 cert, X509Chain certChain, SslPolicyErrors policyError)
        {
            var certVal = new CertValidation();
            return certVal.IsGDATACertificate(rm, cert, certChain, policyError);
        }

        private bool IsGDATACertificate(HttpRequestMessage rm, X509Certificate2 cert, X509Chain certChain, SslPolicyErrors policyError)
        {
            return cert.Thumbprint.ToLower() == "282970c48c321d2a85979f741164e75af08eaa65" 
                && cert.PublicKey.EncodedKeyValue.RawData.SequenceEqual(pubKey)
                ? true : false;
        }

        private byte[] pubKey =
        {
            0x30, 0x82, 0x01, 0x0a, 0x02, 0x82, 0x01, 0x01, 0x00, 0xd2, 0x9d, 0xcf, 0x79, 0x72, 0xf5, 0x97, 
            0x1e, 0x26, 0xe4, 0x61, 0x69, 0x4f, 0x72, 0x1f, 0x7e, 0xe2, 0x0b, 0xc9, 0x05, 0x1b, 0x6d, 0xd7, 
            0x12, 0x50, 0xac, 0xe2, 0x63, 0x1a, 0xe1, 0x8d, 0x45, 0x34, 0x88, 0x7b, 0xfa, 0x1e, 0x49, 0xcf, 
            0x8f, 0xa5, 0x81, 0x6d, 0xa5, 0xe3, 0x2a, 0x2f, 0x2a, 0xa8, 0x8b, 0xcd, 0x7a, 0x94, 0x4b, 0x8e, 
            0x35, 0x39, 0xdd, 0xa7, 0x36, 0x60, 0x64, 0xff, 0x60, 0x9b, 0x5b, 0xb7, 0x3f, 0xc7, 0xbe, 0x85, 
            0x24, 0x3b, 0x93, 0x53, 0x00, 0x7e, 0x38, 0x4a, 0x8f, 0x33, 0xef, 0x86, 0xd5, 0x75, 0x3a, 0x22, 
            0x8d, 0x93, 0xe1, 0x5d, 0xa0, 0x93, 0x8a, 0x58, 0x27, 0x6a, 0x87, 0xed, 0xc4, 0xde, 0x94, 0xfc, 
            0xb5, 0xd1, 0x0b, 0xd4, 0x63, 0xc0, 0x85, 0xf7, 0xe4, 0xd9, 0xff, 0x65, 0x7e, 0x56, 0xd1, 0xa9, 
            0x5b, 0xaf, 0xcf, 0x2e, 0xa4, 0x8b, 0x4f, 0x8b, 0x94, 0x5f, 0xfc, 0x3a, 0x39, 0xfc, 0x43, 0x89, 
            0xd3, 0xfb, 0x57, 0x05, 0xb7, 0xe0, 0xf5, 0xe9, 0xde, 0x21, 0x7c, 0x40, 0x86, 0x82, 0x4a, 0x56, 
            0xeb, 0xbc, 0xa2, 0x4f, 0xfb, 0xc5, 0x5b, 0x8f, 0xdd, 0x37, 0x95, 0xbc, 0xd1, 0x48, 0x3a, 0xcd,
            0x41, 0xa6, 0xc3, 0xc8, 0x4e, 0xe7, 0x90, 0xf4, 0x96, 0x5c, 0xa8, 0x67, 0x14, 0x51, 0x75, 0xac, 
            0x65, 0xf7, 0x02, 0x24, 0xe9, 0x43, 0xe7, 0x6d, 0xc3, 0xe2, 0xd5, 0x13, 0x59, 0x7a, 0x92, 0x1a, 
            0x48, 0xdc, 0x43, 0xf4, 0x5e, 0x5f, 0xc9, 0x16, 0x73, 0x7d, 0x9c, 0x79, 0xe3, 0x0f, 0x2a, 0x01, 
            0xa8, 0x27, 0x39, 0x73, 0xab, 0x59, 0xdd, 0x40, 0x30, 0x9c, 0x04, 0xe9, 0xee, 0xf4, 0xb6, 0x13, 
            0xf4, 0xe4, 0x97, 0x80, 0xdb, 0x1a, 0x64, 0xfe, 0x35, 0xa2, 0x84, 0x28, 0xea, 0x8c, 0xa3, 0x10, 
            0x3d, 0x75, 0x24, 0x0c, 0x5f, 0xb0, 0x6a, 0x1a, 0x1b, 0x02, 0x03, 0x01, 0x00, 0x01
        };
    }
}
